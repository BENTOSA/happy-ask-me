{
  "swagger": "2.0",
  "host": "happy-ask-me.bentosa.it",
  "basePath": "/api/v1",
  "info": {
    "version": "1.0.0",
    "title": "BENTOSA Q&A API",
    "description": "Simple express-based webapp for Q&A during events and seminars",
    "contact": {
      "name": "BENTOSA",
      "email": "info@bentosa.it",
      "url": "http://www.bentosa.it"
    },
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/questions": {
      "get": {
        "summary": "Retrieve a list of Questions",
        "responses": {
          "200": {
            "description": "List of matching questions",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/question"
              }
            }
          },
          "default": {
            "$ref": "#/responses/defaultError"
          }
        },
        "tags": [
          "Question"
        ]
      },
      "post": {
        "summary": "Create a new Question",
        "parameters": [
          {
            "description": "The Question to be created",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/question"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Question successfully created",
            "schema": {
              "$ref": "#/definitions/question"
            },
            "headers": {
              "Location": {
                "description": "URI of the newly created resource",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "default": {
            "$ref": "#/responses/defaultError"
          }
        },
        "tags": [
          "Question"
        ]
      }
    },
    "/questions/{id}": {
      "get": {
        "summary": "Retrieve a Question by id",
        "parameters": [
          {
            "$ref": "#/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested Question",
            "schema": {
              "$ref": "#/definitions/question"
            }
          },
          "404": {
            "$ref": "#/responses/notFound"
          },
          "default": {
            "$ref": "#/responses/defaultError"
          }
        },
        "tags": [
          "Question"
        ]
      }
    }
  },
  "definitions": {
    "errorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "integer",
          "minimum": 100
        },
        "message": {
          "type": "string"
        },
        "info": {
          "type": "string"
        }
      },
      "required": [
        "error",
        "message"
      ]
    },
    "question": {
      "type": "object",
      "description": "This object represents a Question",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the question"
        },
        "name": {
          "type": "string",
          "description": "Name of ther person asking the question"
        },
        "topic": {
          "type": "string",
          "description": "Topic of the question"
        },
        "question": {
          "type": "string",
          "description": "Actual text of the question"
        }
      },
      "required": [
        "name",
        "topic",
        "question"
      ]
    }
  },
  "parameters": {
    "id": {
      "description": "Unique identifier of the resource",
      "name": "id",
      "in": "path",
      "type": "string",
      "required": true
    }
  },
  "responses": {
    "defaultError": {
      "description": "Default/generic error response",
      "schema": {
        "$ref": "#/definitions/errorResponse"
      }
    },
    "notFound": {
      "description": "The requested/specified resource was not found",
      "schema": {
        "$ref": "#/definitions/errorResponse"
      }
    }
  },
  "tags": [
    {
      "name": "Question",
      "description": "A question"
    }
  ]
}
